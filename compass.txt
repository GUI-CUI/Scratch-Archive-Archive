'From MIT Squeak 0.9.4 (June 1, 2003) [No updates present.] on 22 January 2013 at 8:30:11 am'!!ScratchFrameMorph methodsFor: 'menu/button actions' stamp: 'comp edit menu addon'!ShareMenu: t1 
    
| t2 |
    
t2 _ CustomMenu new.
self addServerCommandsTo: t2.
    
t2 localize.
    #(1 2 ) do: [:t3 | t2 labels at: t3 put: ((t2 labels at: t3)
                
copyFrom: 1 to: (t2 labels at: t3) size - 1)
                , ScratchTranslator ellipsesSuffix].
    t2 invokeOn: self at: t1 bottomLeft + (0 @ 10)! !!ScratchFrameMorph methodsFor: 'menu/button actions'!addServerCommandsTo: t1 
    | t2 t3 |
    t2 _ false.
    t2 ifTrue: [^ self].
    t1 addLine.
    (workPane scratchServer notNil and: [workPane scratchServer sessionInProgress])
        ifTrue: 
            [t1 add: 'Show IP Address' action: #showNetworkAddress.
            t3 _ workPane scratchServer isHosting
                        ifTrue: ['Stop Hosting Mesh']
                        ifFalse: ['Leave Mesh'].
            t1 add: t3 action: #exitScratchSession]
        ifFalse: 
            [t1 add: 'Host Mesh' action: #startHostingScratchSession.
            t1 add: 'Join Mesh' action: #joinScratchSession]! !!ScratchFrameMorph methodsFor: 'menu/button actions' stamp: 'comp edit menu addon'!editMenu: t1 
    
| t2 |
    
t2 _ CustomMenu new.
    
t2 add: 'New Blocks' action: #share.
    
t2 add: 'Go To Compass website' action: #launchScratchWebsite.
    
self addServerCommandsTo: t2.
    
t2 localize.
    #(1 2 ) do: [:t3 | t2 labels at: t3 put: ((t2 labels at: t3)
                
copyFrom: 1 to: (t2 labels at: t3) size - 1)
                , ScratchTranslator ellipsesSuffix].
    t2 invokeOn: self at: t1 bottomLeft + (0 @ 10)! !!ScriptableScratchMorph methodsFor: 'other ops'!gotourl: t1 httpIncluded: t2 	| t3 |	t3 _ t1.	t2 ifFalse: [t3 _ 'http://' , t1].	Cursor wait showWhile: [ScratchPlugin primOpenURL: t3]! !!ScriptableScratchMorph methodsFor: 'other ops'!hideCursor	World activeHand showTemporaryCursor: ((Form extent: 1 @ 1 depth: 32)			fillColor: Color transparent)! !!ScriptableScratchMorph methodsFor: 'other ops'!setSpeed	| t1 t2 |	t1 _ CustomMenu new title: 'Single-step speed?'.	t1 add: 'Turbo speed' action: 0.	t1 add: 'Normal' action: 1.	t1 add: 'Flash blocks (fast)' action: 30.	t1 add: 'Flash blocks (slow)' action: 200.	t2 _ t1 localize startUp.	t2 ifNil: [^ self].	ScratchProcess blockHighlightMSecs: t2! !!ScriptableScratchMorph methodsFor: 'other ops'!showCursor	World activeHand showTemporaryCursor: nil! !!ScratchSpriteMorph methodsFor: 'motion ops'!arrowMove: t1 	| t2 t3 t4 t5 |	t5 _ 'up arrow'.	t4 _ 'down arrow'.	t3 _ 'left arrow'.	t2 _ 'right arrow'.	t5 _ self keyPressed: t5.	t4 _ self keyPressed: t4.	t3 _ self keyPressed: t3.	t2 _ self keyPressed: t2.	t5 ifTrue: [self gotoX: self xpos y: t1 + self ypos].	t4		ifTrue: 			[t4 _ t1 * -1.			self gotoX: self xpos y: t4 + self ypos].	t3		ifTrue: 			[t3 _ t1 * -1.			self gotoX: t3 + self xpos y: self ypos].	t2 ifTrue: [self gotoX: t1 + self xpos y: self ypos]! !!ScratchSpriteMorph methodsFor: 'sensing ops'!getTime: t1 	t1 = 'date' ifTrue: [^ Date today].	t1 = 'short date' ifTrue: [^ Date today printFormat: #(1 2 3 $- 2 2 )].	t1 = 'time' ifTrue: [^ Time now].	t1 = 'seconds' ifTrue: [^ Time now seconds].	t1 = 'minutes' ifTrue: [^ Time now minutes].	t1 = 'hours' ifTrue: [^ Time now hours].	t1 = 'day' ifTrue: [^ Date today weekday].	t1 = 'help' ifTrue: [^ 'type date, short date, time, seconds, minutes, day, hours'].	^ self error! !!ScriptableScratchMorph class methodsFor: 'block specs'!blockSpecs	| t1 |	t1 _ #('control' ('when %m clicked' #S #-) ('Go to url %s . Http prefix included? %b' #- #gotourl:httpIncluded: 'https://sites.google.com/site/scratchmodcompass/home') ('hide cursor' #- #hideCursor) ('set single stepping' #- #setSpeed) ('show cursor' #- #showCursor) ('when %k key pressed' #K #-) ('when %m clicked' #M #-) #- ('wait %n secs' #t #wait:elapsed:from: 1) #- ('forever' #c #doForever) ('repeat %n' #c #doRepeat 10) #- ('broadcast %e' #- #broadcast:) ('broadcast %e and wait' #s #doBroadcastAndWait) ('when I receive %e' #E #-) #- ('forever if %b' #c #doForeverIf) ('if %b' #c #doIf) ('if %b' #c #doIfElse) ('wait until %b' #s #doWaitUntil) ('repeat until %b' #c #doUntil) #- ('stop script' #s #doReturn) ('stop all' #- #stopAll) 'operators' ('%n + %n' #r #+ #- #-) ('%n - %n' #r #- #- #-) ('%n * %n' #r #* #- #-) ('%n / %n' #r #/ #- #-) #- ('pick random %n to %n' #r #randomFrom:to: 1 10) #- ('%s < %s' #b #< '' '') ('%s = %s' #b #= '' '') ('%s > %s' #b #> '' '') #- ('%b and %b' #b #&) ('%b or %b' #b #|) ('not %b' #b #not) #- ('join %s %s' #r #concatenate:with: 'hello ' 'world') ('letter %n of %s' #r #letter:of: 1 'world') ('length of %s' #r #stringLength: 'world') #- ('%n mod %n' #r #\\ #- #-) ('round %n' #r #rounded #-) #- ('%f of %n' #r #computeFunction:of: 'sqrt' 10) 'sound' ('play sound %S' #- #playSound:) ('play sound %S until done' #s #doPlaySoundAndWait) ('stop all sounds' #- #stopAllSounds) #- ('play drum %D for %n beats' #t #drum:duration:elapsed:from: 48 0.2) ('rest for %n beats' #t #rest:elapsed:from: 0.2) #- ('play note %N for %n beats' #t #noteOn:duration:elapsed:from: 60 0.5) ('set instrument to %I' #- #midiInstrument: 1) #- ('change volume by %n' #- #changeVolumeBy: -10) ('set volume to %n%' #- #setVolumeTo: 100) ('volume' #r #volume) #- ('change tempo by %n' #- #changeTempoBy: 20) ('set tempo to %n bpm' #- #setTempoTo: 60) ('tempo' #r #tempo) 'motor' ('motor on for %n secs' #t #motorOnFor:elapsed:from: 1) ('motor on' #- #allMotorsOn) ('motor off' #- #allMotorsOff) ('motor power %n' #- #startMotorPower: 100) ('motor direction %W' #- #setMotorDirection: 'this way') 'variables' ('show variable %v' #- #showVariable:) ('hide variable %v' #- #hideVariable:) 'list' ('add %s to %L' #- #append:toList: 'thing') #- ('delete %y of %L' #- #deleteLine:ofList: 1) ('insert %s at %i of %L' #- #insert:at:ofList: 'thing' 1) ('replace item %i of %L with %s' #- #setLine:ofList:to: 1 'list' 'thing') #- ('item %i of %L' #r #getLine:ofList: 1) ('length of %L' #r #lineCountOfList:) ('%L contains %s' #b #list:contains: 'list' 'thing') ).	^ t1 , self obsoleteBlockSpecs! !!ScratchSpriteMorph class methodsFor: 'block specs'!blockSpecs	| t1 |	t1 _ #('motion' ('move %n steps' #- #forward:) ('Arrow key move with speed %n ' #- #arrowMove:) ('point at x:%n y:%n' #- #pointToX:y:) ('turn %n degrees' #- #turnRight: 15) ('turn %n degrees' #- #turnLeft: 15) #- ('point in direction %d' #- #heading: 90) ('point towards %m' #- #pointTowards:) #- ('go to x:%n y:%n' #- #gotoX:y: 0 0) ('go to %m' #- #gotoSpriteOrMouse:) ('glide %n secs to x:%n y:%n' #t #glideSecs:toX:y:elapsed:from: 1 50 50) #- ('change x by %n' #- #changeXposBy: 10) ('set x to %n' #- #xpos: 0) ('change y by %n' #- #changeYposBy: 10) ('set y to %n' #- #ypos: 0) #- ('if on edge, bounce' #- #bounceOffEdge) #- ('x position' #r #xpos) ('y position' #r #ypos) ('direction' #r #heading) 'pen' ('clear' #- #clearPenTrails) #- ('pen down' #- #putPenDown) ('pen up' #- #putPenUp) #- ('set pen color to %c' #- #penColor:) ('change pen color by %n' #- #changePenHueBy:) ('set pen color to %n' #- #setPenHueTo: 0) #- ('change pen shade by %n' #- #changePenShadeBy:) ('set pen shade to %n' #- #setPenShadeTo: 50) #- ('change pen size by %n' #- #changePenSizeBy: 1) ('set pen size to %n' #- #penSize: 1) #- ('stamp' #- #stampCostume) ).	t1 _ t1 , #('looks' ('switch to costume %l' #- #lookLike:) ('paint new costume' #- #drawNewCostume) ('say nothing' #- #sayNothing) ('next costume' #- #nextCostume) ('costume #' #r #costumeIndex) #- ('say %s for %n secs' #t #say:duration:elapsed:from: 'Hello!!' 2) ('say %s' #- #say: 'Hello!!') ('think %s for %n secs' #t #think:duration:elapsed:from: 'Hmm...' 2) ('think %s' #- #think: 'Hmm...') #- ('change %g effect by %n' #- #changeGraphicEffect:by: 'color' 25) ('set %g effect to %n' #- #setGraphicEffect:to: 'color' 0) ('clear graphic effects' #- #filterReset) #- ('change size by %n' #- #changeSizeBy:) ('set size to %n%' #- #setSizeTo: 100) ('size' #r #scale) #- ('show' #- #show) ('hide' #- #hide) #- ('go to front' #- #comeToFront) ('go back %n layers' #- #goBackByLayers: 1) 'sensing' ('touching %m?' #b #touching:) ('touching color %C?' #b #touchingColor:) ('color %C is touching %C?' #b #color:sees:) #- ('ask %s and wait' #s #doAsk 'What''s your name?') ('get %s' #r #getTime: 'date') ('answer' #r #answer) #- ('mouse x' #r #mouseX) ('mouse y' #r #mouseY) ('mouse down?' #b #mousePressed) #- ('key %k pressed?' #b #keyPressed: 'space') #- ('distance to %m' #r #distanceTo:) #- ('reset timer' #- #timerReset) ('timer' #r #timer) #- ('%a of %m' #r #getAttribute:of:) #- ('loudness' #r #soundLevel) ('loud?' #b #isLoud) #~ ('%H sensor value' #r #sensor: 'slider') ('sensor %h?' #b #sensorPressed: 'button pressed') ).	^ t1 , super blockSpecs! !