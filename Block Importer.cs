'From MIT Squeak 0.9.4 (June 1, 2003) [No updates present.] on 13 July 2015 at 10:59:09 am'!Morph subclass: #ScratchFrameMorph	instanceVariableNames: 'topPane viewerPane scriptsPane stageFrame workPane titlePane libraryPane menuPanel stageButtonsPanel readoutPane logoMorph projectTitleMorph flagButton fillScreenFlag paintingInProgress projectDirectory projectName projectInfo author loginName loginPassword watcherPositions shuffledCostumeNames justSaved viewModeButtons viewMode lastViewMode viewModeButtonsPanel toolbarPanel lastWeDoPoll fileInDictionary '	classVariableNames: 'AllowSharing Clipboard DefaultNotes DefaultSprite FileInDictionary Fonts FontsXO IsXO ScratchServers ScratchSkin ScratchSkinXO ShareServer ShareServerPath SupportServer SupportServerPath TakeOverScreen UseErrorCatcher Version VersionDate VisibleDrives WorkpaneExtent '	poolDictionaries: ''	category: 'Scratch-UI-Panes'!Morph subclass: #ScriptableScratchMorph	instanceVariableNames: 'objName vars lists blocksBin isClone media costume costumeChangeMSecs filterPack visibility volume tempoBPM sceneStates '	classVariableNames: 'BlockColorDict BlockSpecDict CustomBlocks DefaultBackgroundForm DefaultSpriteForm DoubleSize Experimental ListBlockColor MeowSound OldMeowPrefixReversed PopSound RandomGen Recorder ScratchOrigin TimerStartMSecs '	poolDictionaries: ''	category: 'Scratch-Objects'!!CommandBlockMorph methodsFor: 'private'!canBecomeWatcher	| t1 |	t1 _ selector asString findAnySubStr: #('mouse' 'key' 'touching' 'distance' ) startingAt: 1.	^ self isReporter & (self argumentCount <= 1) & (#(#not #atRandom #abs #rounded #lineCountOfList: #stringLength: ) includes: selector) not & (t1 > selector asString size) & (#(#tempo #volume #answer #timer #isLoud #backgroundIndex #soundLevel #costume #scale #xpos #ypos #heading #sensorPressed: #sensor: #costumeIndex ) includes: selector)! !!ScratchFileChooserDialog methodsFor: 'initialization'!createBlockFileChooser	scratchFrame _ nil.	readingScratchFile _ true.	list _ ScratchFilePicker new extensions: #(#sbl #cs #st ).	self removeAllMorphs.	bottomSpacer delete.	bottomSpacer _ nil.	mainColumn addMorphBack: list.	self title: 'Add Block(s)'.	list scratchInfoClient: nil.	mainColumn addMorphBack: (Morph new extent: 5 @ 9;		 color: Color transparent);	 addMorphBack: newTitleBin.	fileInfoColumn addMorphBack: buttonRow.	self addMorphBack: shortcutColumn;	 addMorphBack: mainColumn;	 addMorphBack: fileInfoColumn! !!ScratchFrameMorph methodsFor: 'intialization'!initialize	super initialize.	fillScreenFlag _ false.	paintingInProgress _ false.	projectInfo _ Dictionary new.	watcherPositions _ Dictionary new.	justSaved _ false.	author _ ''.	loginName _ ''.	loginPassword _ ''.	viewMode _ #normal.	self createBasicPanes.	self createLogo.	self createMenuPanel.	self createViewModeButtonsPanel.	self createStageButtonsPanel.	self createToolbar.	self extent: 1000 @ 600.	fileInDictionary _ Dictionary new! !!ScratchFrameMorph methodsFor: 'accessing'!fileInProject	| t1 |	fileInDictionary keys size = 0 ifTrue: [^ 0].	t1 _ 1.	fileInDictionary keys asOrderedCollection size		timesRepeat: 			[(ReadWriteStream				on: (fileInDictionary at: t1)				from: ((fileInDictionary at: t1) lines first , (fileInDictionary at: t1) lines second , (fileInDictionary at: t1) lines third , (fileInDictionary at: t1) lines fourth) size + 1				to: (fileInDictionary at: t1) size) fileIn.			t1 _ t1 + 1]! !!ScratchFrameMorph methodsFor: 'menu/button actions'!blocksChooser	| t1 t2 t3 t4 t5 |	t1 _ ScratchFileChooserDialog new createBlockFileChooser; type: #blockFile.	t2 _ t1 getUserResponse.	t2 = #cancelled ifTrue: [^ self].	t3 _ (FileDirectory forFileName: t2)				oldFileNamed: t2.	t4 _ t3 contentsOfEntireFile.	t5 _ t4 lines first , t4 lines second , t4 lines third , t4 lines fourth.	ScriptableScratchMorph customAdd: t5.	(ReadWriteStream		on: t4		from: t5 size + 1		to: t4 size) fileIn.	fileInDictionary at: fileInDictionary keys size + 1 put: (ReadWriteStream			on: t4			from: t5 size + 1			to: t4 size) contents! !!ScratchFrameMorph methodsFor: 'menu/button actions'!fileMenu: t1 	| t2 |	t2 _ CustomMenu new.	t2 add: 'New' action: #newScratchProject.	t2 add: 'Open' action: #openScratchProject.	t2 add: 'Save' action: #saveScratchProjectNoDialog.	t2 add: 'Save As' action: #saveScratchProject.	t2 addLine.	t2 add: 'Import Project' action: #importScratchProject.	t2 add: 'Export Sprite' action: #exportSprite.	t2 add: 'Import Block' action: #blocksChooser.	t2 addLine.	t2 add: 'Project Notes' action: #editNotes.	Sensor shiftPressed		ifTrue: 			[t2 addLine.			t2 add: 'Write Project Summary' action: #writeSummaryFile.			t2 add: 'Write Multiple Project Summaries' action: #writeMultipleSummaries].	t2 addLine.	t2 add: 'Quit' action: #quitScratch.	t2 localize.	#(2 4 5 6 7 8 ) do: [:t3 | t2 labels at: t3 put: ((t2 labels at: t3)				copyFrom: 1 to: (t2 labels at: t3) size - 1)				, ScratchTranslator ellipsesSuffix].	t2 invokeOn: self at: t1 bottomLeft + (0 @ 10)! !!ScratchFrameMorph methodsFor: 'menu/button actions'!importSpriteOrProject: t1 	| t2 t3 t4 t5 t6 t7 t8 |	t2 _ t1.	(t2 isKindOf: String)		ifTrue: 			[(FileDirectory default fileExists: t1)				ifFalse: [^ self].			t3 _ FileStream readOnlyFileNamed: t1.			t3 ifNil: [^ self].			t2 _ t3 binary contentsOfEntireFile].	[projectInfo _ self extractInfoFrom: t2]		ifError: [:t9 :t10 | ^ self inform: 'Could not read project; file may be damaged' withDetails: '(' , t9 , ')'].	ScriptableScratchMorph customAdd: (Compiler			evaluate: '#' , ((projectInfo at: 'customSpecs' ifAbsent: [#()]) asString copyFrom: 2 to: (projectInfo at: 'customSpecs' ifAbsent: [#()]) asString size - 1)			for: self			logged: false).	fileInDictionary _ projectInfo at: 'FileInDictionary' ifAbsent: [Dictionary new].	self fileInProject.	t4 _ self extractProjectFrom: t2.	t4		allMorphsDo: 			[:t9 | 			(t9 isKindOf: WatcherMorph)				ifTrue: [t9 mapReceiver: t4 to: workPane].			(t9 isKindOf: ScriptableScratchMorph)				ifTrue: [t9 blocksBin submorphs do: [:t10 | (t10 isKindOf: BlockMorph)							ifTrue: [t10 blockSequence do: [:t11 | t11 mapReceiver: t4 to: workPane]]]]].	t4 varNames do: [:t12 | workPane addVariable: t12 value: (t4 getVar: t12)].	t4 blocksBin submorphs do: [:t10 | (t10 isKindOf: BlockMorph)			ifTrue: [workPane addStack: t10 fullCopy]].	t5 _ workPane defaultImageMedia form hibernate.	t6 _ SoundMedia new sound.	t4 media do: 		[:t13 | 		(t13 isImage and: [t13 form hibernate bits ~= t5 bits])			ifTrue: [workPane addMediaItem: t13].		(t13 isSound and: [t13 sound samples ~= t6 samples])			ifTrue: [workPane addMediaItem: t13]].	t4 submorphs do: [:t9 | (t9 isKindOf: ScratchSpriteMorph)			ifTrue: 				[t7 _ t9 objName.				t8 _ t9 position - t9 owner position + (47 @ 55).				self addAndView: t9.				t9 objName: t7.				t9 position: workPane topLeft + t8]].	workPane layoutChanged! !!ScratchFrameMorph methodsFor: 'menu/button actions'!shareMenu: t1 	| t2 |	DialogBoxMorph inform: 'You can not share while the BLOCK EXTENSIONS addon is installed'! !!ScratchFrameMorph methodsFor: 'startup'!startup	| t1 t2 t3 t4 |	HostSystemMenus startUp.	HostSystemMenus menuBarControler reviseHostMenus.	ScriptableScratchMorph randomInit.	ScratchTranslator detectRenderPlugin.	ScratchTranslator importLanguagesList.	ScratchFrameMorph readShareServerEntry.	self processSettingsFile.	self readDefaultNotes.	self updateProjectName.	shuffledCostumeNames _ nil.	fileInDictionary _ Dictionary new.	author _ ''.	loginName _ ''.	loginPassword _ ''.	justSaved _ true.	t4 _ false.	t1 _ InputSensor startupFileNames asOrderedCollection.	2 to: 10 do: 		[:t5 | 		t3 _ Smalltalk getSystemAttribute: t5.		(t3 notNil and: [t3 size > 0])			ifTrue: [t1 addLast: (ScratchPlugin primShortToLongPath: t3)]].	t1 do: 		[:t6 | 		t6 asLowercase = 'presentation' ifTrue: [t4 _ true].		t6 asLowercase = 'fullscreen' ifTrue: [TakeOverScreen _ true]].	TakeOverScreen		ifTrue: 			[Smalltalk fullScreenMode: true.			World restoreDisplay].	self enterQuarterModeIfSmallScreen.	t2 _ t1				detect: [:t7 | (t7 asLowercase endsWith: '.sb')						or: [t7 asLowercase endsWith: '.scratch']]				ifNone: [].	t2		ifNotNil: 			[t4 ifTrue: [Display fillColor: Color black].			self openScratchProjectNamed: t2.			t4 ifTrue: [self enterPresentationMode; shoutGo].			^ self].	viewerPane currentCategory: 'motion'.	self setDefaultSprite.	self newScratchProject.	t2 _ t1 detect: [:t7 | t7 asLowercase endsWith: '.sprite']				ifNone: [^ self].	workPane submorphs do: [:t8 | (t8 isKindOf: ScratchSpriteMorph)			ifTrue: [t8 deleteSprite]].	self importSpriteOrProject: t2! !!ScratchFrameMorph methodsFor: 'file read/write'!installNewProject: t1 	| t2 t3 |	self stopAll.	ScriptableScratchMorph customBlocksReset.	t1 class = ScratchStageMorph ifFalse: [^ self inform: 'Incompatible Scratch file format'].	workPane scratchServer		ifNotNil: 			[workPane scratchServer clearCaches.			workPane scratchServer stage: t1.			t1 scratchServer: workPane scratchServer].	t1 isQuarterSize: workPane isQuarterSize.	t1 bounds: workPane bounds.	t1 midiPortNum: workPane midiPortNum.	workPane closeMIDI.	t3 _ workPane sensorBoard.	t1 submorphs do: [:t4 | (t4 isKindOf: SensorBoardMorph)			ifTrue: 				[t3 position: t4 position.				t1 replaceSubmorph: t4 by: t3.				t3 tryToOpenPort]].	t1 sensorBoard: t3.	workPane owner replaceSubmorph: workPane by: t1.	workPane _ t1.	self fixByteReversedSounds.	workPane submorphs do: 		[:t4 | 		(t4 isKindOf: WatcherMorph)			ifTrue: [t4 convertFromOldWatcher].		(t4 respondsTo: #costume)			ifTrue: [t4 position: t4 position + t4 costume rotationCenter].		t4 layoutChanged].	workPane layoutChanged.	ScriptableScratchMorph resetTimer.	t2 _ workPane.	workPane submorphs do: [:t4 | (t4 respondsTo: #scripts)			ifTrue: [t4 scripts size >= t2 scripts size ifTrue: [t2 _ t4]]].	t2 viewBlocksAndScripts.	workPane sprites isEmpty ifTrue: [workPane submorphs do: [:t4 | (t4 isKindOf: ScriptableScratchMorph)				ifTrue: [workPane sprites addLast: t4]]].	scriptsPane tabPane currentTab: 'Scripts'.	libraryPane clearLibrary.	workPane clearPenTrails.	self updateProjectName.	ScratchProcess blockHighlightMSecs: 1.	ScratchPrompterMorph clearLastAnswer.	(projectInfo at: 'isHosting' ifAbsent: [false])		ifTrue: [self enableRemoteSensors].	(projectInfo at: 'hasMotorBlocks' ifAbsent: [false])		ifTrue: [self showMotorBlocks].	(projectInfo includesKey: 'penTrails')		ifTrue: [workPane penTrailsForm: (projectInfo at: 'penTrails')].	Clipboard _ nil.	World cleanseStepList.	Smalltalk garbageCollect.	self world ifNotNil: [self world startSteppingSubmorphsOf: self].	ScriptableScratchMorph scratchOrigin: workPane center.	justSaved _ true! !!ScratchFrameMorph methodsFor: 'file read/write'!openScratchProject	| t1 t2 |	self closeMediaEditorsAndDialogs ifFalse: [^ self].	self stopAll.	(justSaved or: [self projectIsEmpty])		ifFalse: 			[t1 _ DialogBoxMorph askWithCancel: 'Save the current project?'.			t1 = #cancelled ifTrue: [^ self].			t1 ifTrue: [self saveScratchProjectNoDialog]].	t1 _ ScratchFileChooserDialog openScratchFileFor: self.	t1 = #cancelled ifTrue: [^ self].	(t1 isKindOf: String)		ifTrue: [^ self openScratchProjectNamed: t1].	(t1 isKindOf: ByteArray)		ifTrue: 			[[projectInfo _ self extractInfoFrom: t1]				ifError: [projectInfo _ Dictionary new].			[t2 _ self extractProjectFrom: t1]				ifError: [^ self].			ScriptableScratchMorph customBlocksList: (projectInfo at: 'customSpecs' ifAbsent: [#()]).			fileInDictionary _ projectInfo at: 'FileInDictionary' ifAbsent: [Dictionary new].			self fileInProject.			self installNewProject: t2.			projectDirectory _ ScratchFileChooserDialog getDefaultFolderForType: #project]! !!ScratchFrameMorph methodsFor: 'file read/write'!openScratchProjectNamed: t1 	| t2 t3 t4 t5 t6 |	self closeMediaEditorsAndDialogs ifFalse: [^ self].	t6 _ t1.	t2 _ FileStream readOnlyFileNamedOrNil: t6.	t2		ifNil: 			[t6 _ t1 isoLatinToMac asUTF8.			t2 _ FileStream readOnlyFileNamedOrNil: t6.			t2 ifNil: [^ self inform: 'Could not read' withDetails: t1]].		[t3 _ t2 binary contentsOfEntireFile.	projectInfo _ self extractInfoFrom: t3]		ifError: [:t7 :t8 | ^ self inform: 'Could not read project; file may be damaged' withDetails: '(' , t7 , ')'].	ScriptableScratchMorph customBlocksList: (projectInfo at: 'customSpecs' ifAbsent: [#()]).	fileInDictionary _ projectInfo at: 'FileInDictionary' ifAbsent: [Dictionary new].	self fileInProject.	[t4 _ self extractProjectFrom: t3]		ifError: [^ self].	t5 _ FileDirectory dirPathFor: t6.	projectDirectory _ FileDirectory on: t5.	ScratchFileChooserDialog setLastFolderTo: projectDirectory forType: #project.	projectName _ FileDirectory localNameFor: t6.	self installNewProject: t4.	self initializeWatcherPositions.	viewerPane updateContents! !!ScratchFrameMorph methodsFor: 'file read/write'!saveScratchProject	| t1 t2 |	self closeMediaEditorsAndDialogs ifFalse: [^ self].	self stopAll.	t1 _ ScratchFileChooserDialog saveScratchFileFor: self.	(t1 size = 0 or: [t1 = #cancelled])		ifTrue: [^ self].	[(t2 _ ScratchFileChooserDialog confirmFileOverwriteIfExisting: t1) = false]		whileTrue: 			[t1 _ ScratchFileChooserDialog saveScratchFileFor: self.			(t1 size = 0 or: [t1 = #cancelled])				ifTrue: [^ self]].	t2 = #cancelled ifTrue: [^ self].	self updateLastHistoryEntryIfNeeded.	t1 _ (self nameFromFileName: t1)				, '.sb'.	projectDirectory _ FileDirectory on: (FileDirectory dirPathFor: t1).	projectName _ FileDirectory localNameFor: t1.	projectInfo at: 'author' put: author.	projectInfo at: 'customSpecs' put: ScriptableScratchMorph customBlocksList.	projectInfo at: 'FileInDictionary' put: fileInDictionary.	self updateHistoryProjectName: projectName op: 'save'.	self writeScratchProject! !!ScratchFrameMorph methodsFor: 'file read/write'!saveScratchProjectNoDialog	| t1 t2 |	self closeMediaEditorsAndDialogs ifFalse: [^ self].	projectName ifNil: [projectName _ ''].	t1 _ self nameFromFileName: projectName.	t2 _ ScratchFileChooserDialog getLastFolderForType: #project.	t1 size = 0 | (t2 fileExists: t1 , '.sb') not ifTrue: [^ self saveScratchProject].	ScratchFileChooserDialog lastFolderIsSampleProjectsFolder ifTrue: [^ self saveScratchProject].	self updateLastHistoryEntryIfNeeded.	projectName _ FileDirectory localNameFor: t1 , '.sb'.	projectDirectory _ t2.	projectInfo at: 'customSpecs' put: ScriptableScratchMorph customBlocksList.	projectInfo at: 'FileInDictionary' put: fileInDictionary.	self updateHistoryProjectName: projectName op: 'save'.	self writeScratchProject! !!ScratchViewerMorph methodsFor: 'initialization'!rebuildCategorySelectors	| t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 |	t1 _ #(('motion' #motion #motion) ('control' #control #control) ('looks' #looks #looks) ('sensing' #sensing #sensing) ('sound' #sound #sound) ('operators' #operators #operators) ('pen' #pen #pen) ('variables' #variables #variables) ('extensions' #custom #sensing) ).	submorphs do: [:t14 | (t14 isKindOf: ResizableToggleButton2)			ifTrue: [t14 delete]].	t2 _ 75 @ 0.	t3 _ t1				collect: 					[:t15 | 					t4 _ (ScratchTranslator translationFor: t15 first asString) capitalized.					t5 _ ScratchFrameMorph skinAt: t15 third.					t6 _ ScratchFrameMorph skinAt: t15 third , 'Pressed'.					t7 _ ScratchFrameMorph skinAt: t15 third , 'Over'.					ScratchTranslator isRTL						ifTrue: [t8 _ ResizableToggleButton2 new										offForm: (t5 flipBy: #horizontal centerAt: t5 center)										onForm: (t6 flipBy: #horizontal centerAt: t6 center)										overForm: (t7 flipBy: #horizontal centerAt: t7 center)]						ifFalse: [t8 _ ResizableToggleButton2 new										offForm: t5										onForm: t6										overForm: t7].					t8 label: t4 font: (ScratchFrameMorph getFont: #Category);					 setLabelColor: Color white;					 target: self;					 actionSelector: #currentCategory:;					 arguments: (Array with: t15 second);					 toggleButtonMode: true;					 toggleMode: false.					ScratchTranslator isRTL						ifTrue: [t8 rightJustifyInset: 10]						ifFalse: [t8 leftJustifyInset: 10].					t2 _ t2 max: t8 extent + (3 @ -6).					t8].	t9 _ 15.	catButtonsExtent _ 2 * t2 x + (3 * t9) @ (t1 size // 2 * (t2 y + 6) + 50).	t10 _ self left + 12 + t9.	t11 _ t10 + t2 x + t9.	t12 _ t10.	t13 _ self top + 17.	1 to: t3 size do: 		[:t16 | 		t8 _ t3 at: t16.		t8 extent: t2.		self addMorph: (t8 position: t12 @ t13).		t16 even			ifTrue: 				[t12 _ t10.				t13 _ t13 + t8 height + 6]			ifFalse: [t12 _ t11]].	self width: catButtonsExtent x.	pageViewer position: self position + (0 @ catButtonsExtent y).	topSectionHeight _ catButtonsExtent y - 4! !!ScriptableScratchMorph methodsFor: 'blocks'!blocksFor: t1 	| t2 t3 t4 t5 t6 |	t2 _ self class blockColorFor: t1.	'custom' = t1		ifTrue: 			[t2 _ Color						r: 4 / 255						g: 147 / 255						b: 219 / 255						alpha: 0.9.			t6 _ Color						r: 4 / 255						g: 147 / 255						b: 219 / 255						alpha: 0.9].	t3 _ OrderedCollection new.	t4 _ nil.	self class blockSpecs do: [:t7 | ((t7 isKindOf: String)			and: [t7 ~= #- and: [t7 ~= #~]])			ifTrue: [t4 _ t7]			ifFalse: [t4 = t1					ifTrue: [t7 = #- | (t7 = #~)							ifTrue: [t3 addLast: t7]							ifFalse: [(t5 _ self blockFromSpec: t7 color: ('custom' = t1												ifTrue: [t7 second = #r														ifTrue: [t2]														ifFalse: [t6]]												ifFalse: [t2])) ifNotNil: [t3 addLast: t5]]]]].	^ t3 asArray! !!ScriptableScratchMorph methodsFor: 'custom'!currentMonth	^ Date today monthIndex! !!ScriptableScratchMorph methodsFor: 'custom'!currentYear	^ Date today year! !!ScriptableScratchMorph class methodsFor: 'class initialization'!initialize	Experimental _ false.	ScratchOrigin _ 0 @ 0.	RandomGen _ Random new.	TimerStartMSecs _ Time millisecondClockValue.	ListBlockColor _ Color				h: 18				s: 0.92				v: 0.85.	CustomBlocks _ nil! !!ScriptableScratchMorph class methodsFor: 'block specs'!blockColorFor: t1 	'control' = t1 ifTrue: [^ Color			h: 41			s: 0.85			v: 0.9].	'motion' = t1 ifTrue: [^ Color			h: 225			s: 0.65			v: 0.83].	'motor' = t1 ifTrue: [^ Color			h: 220			s: 0.85			v: 0.725].	'looks' = t1 ifTrue: [^ Color			h: 264			s: 0.62			v: 0.89].	'pen' = t1 ifTrue: [^ Color			h: 165			s: 1			v: 0.63].	'operators' = t1 ifTrue: [^ Color			h: 93			s: 0.9			v: 0.76].	'sound' = t1 ifTrue: [^ Color			h: 296			s: 0.66			v: 0.85].	'sensing' = t1 ifTrue: [^ Color			h: 200			s: 0.98			v: 0.86].	'variables' = t1 ifTrue: [^ Color			h: 25			s: 0.88			v: 0.95].	'custom' = t1 ifTrue: [^ Color			r: 4 / 255			g: 147 / 255			b: 219 / 255			alpha: 0.9].	'list' = t1 ifTrue: [^ ListBlockColor].	^ Color		h: 0		s: 0.81		v: 0.83! !!ScriptableScratchMorph class methodsFor: 'block specs'!blockSpecs	| t1 |	t1 _ #('control' ('when %m clicked' #S #-) ('when %k key pressed' #K #-) ('when %m clicked' #M #-) #- ('wait %n secs' #t #wait:elapsed:from: 1) #- ('forever' #c #doForever) ('repeat %n' #c #doRepeat 10) #- ('broadcast %e' #- #broadcast:) ('broadcast %e and wait' #s #doBroadcastAndWait) ('when I receive %e' #E #-) #- ('forever if %b' #c #doForeverIf) ('if %b' #c #doIf) ('if %b' #c #doIfElse) ('wait until %b' #s #doWaitUntil) ('repeat until %b' #c #doUntil) #- ('stop script' #s #doReturn) ('stop all' #- #stopAll) 'operators' ('%n + %n' #r #+ #- #-) ('%n - %n' #r #- #- #-) ('%n * %n' #r #* #- #-) ('%n / %n' #r #/ #- #-) #- ('pick random %n to %n' #r #randomFrom:to: 1 10) #- ('%s < %s' #b #< '' '') ('%s = %s' #b #= '' '') ('%s > %s' #b #> '' '') #- ('%b and %b' #b #&) ('%b or %b' #b #|) ('not %b' #b #not) #- ('join %s %s' #r #concatenate:with: 'hello ' 'world') ('letter %n of %s' #r #letter:of: 1 'world') ('length of %s' #r #stringLength: 'world') #- ('%n mod %n' #r #\\ #- #-) ('round %n' #r #rounded #-) #- ('%f of %n' #r #computeFunction:of: 'sqrt' 10) 'sound' ('play sound %S' #- #playSound:) ('play sound %S until done' #s #doPlaySoundAndWait) ('stop all sounds' #- #stopAllSounds) #- ('play drum %D for %n beats' #t #drum:duration:elapsed:from: 48 0.2) ('rest for %n beats' #t #rest:elapsed:from: 0.2) #- ('play note %N for %n beats' #t #noteOn:duration:elapsed:from: 60 0.5) ('set instrument to %I' #- #midiInstrument: 1) #- ('change volume by %n' #- #changeVolumeBy: -10) ('set volume to %n%' #- #setVolumeTo: 100) ('volume' #r #volume) #- ('change tempo by %n' #- #changeTempoBy: 20) ('set tempo to %n bpm' #- #setTempoTo: 60) ('tempo' #r #tempo) 'motor' ('motor on for %n secs' #t #motorOnFor:elapsed:from: 1) ('motor on' #- #allMotorsOn) ('motor off' #- #allMotorsOff) ('motor power %n' #- #startMotorPower: 100) ('motor direction %W' #- #setMotorDirection: 'this way') 'variables' ('show variable %v' #- #showVariable:) ('hide variable %v' #- #hideVariable:) 'list' ('add %s to %L' #- #append:toList: 'thing') #- ('delete %y of %L' #- #deleteLine:ofList: 1) ('insert %s at %i of %L' #- #insert:at:ofList: 'thing' 1) ('replace item %i of %L with %s' #- #setLine:ofList:to: 1 'list' 'thing') #- ('item %i of %L' #r #getLine:ofList: 1) ('length of %L' #r #lineCountOfList:) ('%L contains %s' #b #list:contains: 'list' 'thing') ).	^ t1 , self obsoleteBlockSpecs , self customBlocks! !!ScriptableScratchMorph class methodsFor: 'custom specs'!customAdd: t1 	| t2 |	CustomBlocks ifNil: [CustomBlocks _ #('custom' )].	t2 _ '#(' , t1 asString , ')'.	(CustomBlocks includes: t1)		ifTrue: [^ self].	CustomBlocks _ CustomBlocks , (Compiler					evaluate: t2					for: self					logged: false)! !!ScriptableScratchMorph class methodsFor: 'custom specs'!customBlocks	| t1 t2 |	CustomBlocks asArray isEmptyOrNil ifTrue: [^ #()].	t2 _ CustomBlocks.	t1 _ #('custom' ).	CustomBlocks asArray do: [:t3 | t1 _ t1 , t3].	^ t1! !!ScriptableScratchMorph class methodsFor: 'custom specs'!customBlocksList	^ CustomBlocks! !!ScriptableScratchMorph class methodsFor: 'custom specs'!customBlocksList: t1 	CustomBlocks _ t1! !!ScriptableScratchMorph class methodsFor: 'custom specs'!customBlocksReset	CustomBlocks _ #()! !ScriptableScratchMorph initialize!!ScriptableScratchMorph class reorganize!('class initialization' initialize)('block specs' blockColorDict blockColorFor: blockSpecDict blockSpecs buildBlockSpecDictionary listBlockColor obsoleteBlockSpecs)('forms/sounds/icons' defaultBackgroundForm meowSound oldMeowPrefixReversed popSound)('translation support' blockSpecsArrayForTranslation blockSpecsForTranslation blockSpecsStringForTranslation)('other' doubleSize: fromUser isSpriteSpecificTarget:selector: randomInit resetTimer scratchOrigin: soundRecorder stopSoundRecorder)('custom specs' customAdd: customBlocks customBlocksList customBlocksList: customBlocksReset)!Morph subclass: #ScratchFrameMorph	instanceVariableNames: 'topPane viewerPane scriptsPane stageFrame workPane titlePane libraryPane menuPanel stageButtonsPanel readoutPane logoMorph projectTitleMorph flagButton fillScreenFlag paintingInProgress projectDirectory projectName projectInfo author loginName loginPassword watcherPositions shuffledCostumeNames justSaved viewModeButtons viewMode lastViewMode viewModeButtonsPanel toolbarPanel lastWeDoPoll fileInDictionary '	classVariableNames: 'AllowSharing Clipboard DefaultNotes DefaultSprite Fonts FontsXO IsXO ScratchServers ScratchSkin ScratchSkinXO ShareServer ShareServerPath SupportServer SupportServerPath TakeOverScreen UseErrorCatcher Version VersionDate VisibleDrives WorkpaneExtent '	poolDictionaries: ''	category: 'Scratch-UI-Panes'!